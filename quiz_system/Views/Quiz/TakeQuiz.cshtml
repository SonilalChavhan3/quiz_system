@model QuizViewModel
@{
    ViewData["Title"] = "Take Quiz";
}
<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h2>@Model.Section.Name - Question</h2>
            <p>Question @Model.CurrentQuestionNumber / @Model.TotalQuestions</p>
        </div>
        <div id="timer" class="alert alert-warning text-center">
            Time Remaining: <span id="time-remaining"></span>
        </div>
        <div class="card-body">
            @if (Model.Question != null)
            {
                <form method="post" action="@Url.Action("NextQuestion", "Quiz")">
                    <input type="hidden" name="sectionId" value="@Model.SectionId" />
                    <input type="hidden" name="questionId" value="@Model.Question.Id" />

                    <div class="form-group">
                        <label class="font-weight-bold">@Model.Question.QuestionText</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswer" id="optionA" value="OptionA" />
                            <label class="form-check-label" for="optionA">@Model.Question.OptionA</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswer" id="optionB" value="OptionB" />
                            <label class="form-check-label" for="optionB">@Model.Question.OptionB</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswer" id="optionC" value="OptionC" />
                            <label class="form-check-label" for="optionC">@Model.Question.OptionC</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswer" id="optionD" value="OptionD" />
                            <label class="form-check-label" for="optionD">@Model.Question.OptionD</label>
                        </div>
                        <span class="text-danger" id="validationError"></span>
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary">Next Question</button>
                    </div>

                   
                </form>
            }
            else
            {
                <p class="text-center text-danger font-weight-bold">Question not found or already answered.</p>
            }
        </div>
        <div class="card-footer text-center">
            <a href="@Url.Action("Index", "Quiz")" class="btn btn-secondary">Back to Home</a>
        </div>
    </div>
</div>

<script>
    document.querySelector('form').addEventListener('submit', function (event) {
        const selectedAnswer = document.querySelector('input[name="selectedAnswer"]:checked');
        if (!selectedAnswer) {
            event.preventDefault();
            document.getElementById('validationError').textContent = 'Please select an answer.';
        }
    });
</script>


<script>
    let totalTime = @Model.RemainingTimeInSeconds; // Use remaining time from the backend
    const timerElement = document.getElementById("time-remaining");

    const timerInterval = setInterval(() => {
        const minutes = Math.floor(totalTime / 60);
        const seconds = totalTime % 60;
        timerElement.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        totalTime--;

        if (totalTime < 0) {
            clearInterval(timerInterval);
            submitQuiz();
        }
    }, 1000);

    function submitQuiz() {
        fetch(`/Quiz/SubmitQuiz?sectionId=${@Model.SectionId}&sectionName=${encodeURIComponent('@Model.Section.Name')}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            
        })
        .then(response => response.json())
        .then(data => {
            if (data.redirectUrl) {
                window.location.href = data.redirectUrl;
            } else {
                alert("Failed to submit the quiz automatically.");
            }
        });
    }
</script>


